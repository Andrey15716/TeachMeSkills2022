package task6;

import org.codehaus.plexus.util.StringUtils;

import java.util.*;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

//Пишем библиотеку.
//        * Для каждой книги библиотечного фонда известны автор, название и год издания.
//        * Для читателя библиотеки будем хранить ФИО и электронный адрес. Каждый читатель может взять в библиотеке одну или несколько книг.
//        * Ещё нам понадобится флаг читательского согласия на уведомления по электронной почте.
//        * Рассылки организуют сотрудники библиотеки: напоминают о сроке возврата книг, сообщают новости.
//        * Создаем классы:
//        *  - Book с полями Автор, Название, Год издания
//        *  - Reader(читатель) с полями ФИО, электронный адрес, флаг согласия на рассылку, список взятых книг
//        *  - EmailAddress  с полями электронный адрес, дополнительная информация
//        *  - Library содержит список книг и список читателей.
//        *
//        *  Задачи:
//        *  a) Получить список всех книг библиотеки, отсортированных по году издания.
//        *  b) Требуется создать список рассылки (объекты типа EmailAddress) из адресов всех читателей библиотеки.
//        *      При этом флаг согласия на рассылку учитывать не будем: библиотека закрывается, так что хотим оповестить всех.
//        *  c) Снова нужно получить список рассылки. Но на этот раз включаем в него только адреса читателей, которые согласились на рассылку.
//        *      Дополнительно нужно проверить, что читатель взял из библиотеки больше одной книги.
//        *  d) Получить список всех книг, взятых читателями.
//        *      Список не должен содержать дубликатов (книг одного автора, с одинаковым названием и годом издания).
//        *  e) Проверить, взял ли кто-то из читателей библиотеки какие-нибудь книги Пушкина Александра Сергеевича.
//        *
//        *  Задачи со ЗВЕЗДОЧКОЙ:
//        *  а) Узнать наибольшее число книг, которое сейчас на руках у читателя.
//        *  b) Необходимо рассылать разные тексты двум группам:
//        *      * тем, у кого взято меньше двух книг, просто расскажем о новинках библиотеки;
//        *      * тем, у кого две книги и больше, напомним о том, что их нужно вернуть в срок.
//        *      То есть надо написать метод, который вернёт два списка адресов (типа EmailAddress): с пометкой OK — если книг не больше двух,
//        *      или TOO_MUCH — если их две и больше. Порядок групп не важен.
//        *  с) Для каждой группы (OK, TOO_MUCH) получить списки читателей в каждой группе.
//        *  d) Для каждой группы (OK, TOO_MUCH) получить ФИО читателей в каждой группе, перечисленные через запятую.
//        *      И ещё каждый такой список ФИО нужно обернуть фигурными скобками.
//        *      Пример: TOO_MUCH {Иванов Иван Иванович, Васильев Василий Васильевич}
//        *              OK {Семёнов Семён Семёнович}
public class Main {
    public static void main(String[] args) {
        List<Book> bookList = List.of(
                new Book("А.С. Пушкин", "Капитанская дочка", 1836),
                new Book("Л.Н. Толстой", "Война и Мир", 1865),
                new Book("Н.В. Гоголь", "Мертвые души", 1842),
                new Book("М.А. Булгаков", "Собачье сердце", 1925));

        List<Email> emailList = List.of(
                new Email("agag@mail.ru"),
                new Email("gehe@gmail.com"),
                new Email("qqq@yandex.by"),
                new Email("3462hhrt@yandex.by"));

        List<Reader> readerList = List.of(
                new Reader("Andrey", "agag@mail.ru", true, List.of(
                        new Book("А.С. Пушкин", "Капитанская дочка", 1836),
                        new Book("Н.В. Гоголь", "Мертвые души", 1842),
                        new Book("Л.Н. Толстой", "Война и Мир", 1865))),
                new Reader("Ivan", "gehe@gmail.com", true, List.of(
                        new Book("Н.В. Гоголь", "Мертвые души", 1842),
                        new Book("М.А. Булгаков", "Собачье сердце", 1925))),
                new Reader("Vlad", "qqq@yandex.by", true, List.of(
                        new Book("Н.В. Гоголь", "Мертвые души", 1842),
                        new Book("А.С. Пушкин", "Капитанская дочка", 1836))));
        Library library = new Library(bookList, readerList);

        library.getBooks().stream()
                .sorted(Comparator.comparing(Book::getYear))
                .forEach(System.out::println);

        library.getReaders().stream()
                .filter(reader -> (long) reader.getBooks().size() >= 1)
                .forEach(System.out::println);

//        library.getReaders().stream()
//                .map(Reader::getBooks)
//                .filter(name->name.)
//                .forEach(System.out::println);
    }
}
